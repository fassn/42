<- Vector ---------------------------------------------------------------------
The Vector class handles vectors.

An instance can be can be constructed using mandatory dest Vertex object.
new Vector( array( 'dest' => new Vertex ( array ( 'x' => 0, 'y' => 0, 'z' => 0 ) ) ) );

It can also be constructed using an optional orig Vertex object to define the origin Vertex of the vector.
new Vector( array( 'dest' => {...}, 'orig' => new Vertex ( array ( 'x' => 0, 'y' => 0, 'z' => 0 ) ) ) );
Any other use is undefined behaviour.

The class provides the following methods :

float       magnitude();
Returns the norm of the vector.

Vector      normalize();
Returns a normalized vector.

Vector      add( Vector $rhs );
Returns the addition of the 2 vectors.

Vector      sub( Vector $rhs );
Returns the difference of the 2 vectors.

Vector      opposite();
Returns the opposite of the vector.

Vector      scalarProduct( $k );
Returns a vector: product of the vector with a scalar.

float       dotProduct ( Vector $rhs );
Returns the scalar product of 2 vectors.

float       cos( Vector $rhs );
Returns the cosinus of the 2 vectors.

Vector      crossProduct( Vector $rhs );
Returns the vector: cross-product of the 2 vectors.

float/int   getX();
Returns the X coordinate of the vertex.

float/int   getY();
Returns the Y coordinate of the vertex.

float/int   getZ();
Returns the Z coordinate of the vertex.

float/int   getW();
Returns the W coordinate of the vertex.

setX(float/int $value);
Sets the X coordinate of the vertex.

setY(float/int $value);
Sets the Y coordinate of the vertex.

setZ(float/int $value);
Sets the Z coordinate of the vertex.

setW(float/int $value);
Sets the W coordinate of the vertex.
--------------------------------------------------------------------- Vector ->
